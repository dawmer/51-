C51 COMPILER V9.60.0.0   OLED                                                              11/13/2022 12:00:04 PAGE 1   


C51 COMPILER V9.60.0.0, COMPILATION OF MODULE OLED
OBJECT MODULE PLACED IN oled.OBJ
COMPILER INVOKED BY: C:\Keil_v5\C51\BIN\C51.EXE oled.c OPTIMIZE(8,SPEED) BROWSE INCDIR(.\四路采集串口显示) DEBUG OBJECTE
                    -XTEND

line level    source

   1          
   2          #include "oled.h"
   3          //#include "stdlib.h"
   4          #include "oledfont.h"    
   5                                     
   6          void delay_ms(unsigned int ms)
   7          {                         
   8   1              unsigned int a;
   9   1              while(ms)
  10   1              {
  11   2                      a=1800;
  12   2                      while(a--);
  13   2                      ms--;
  14   2              }
  15   1              return;
  16   1      }
  17          /**********************************************
  18          //IIC Start
  19          **********************************************/
  20          void IIC_Start()
  21          {
  22   1      
  23   1              OLED_SCLK_Set() ;
  24   1              OLED_SDIN_Set();
  25   1              OLED_SDIN_Clr();
  26   1              OLED_SCLK_Clr();
  27   1      }
  28          
  29          /**********************************************
  30          //IIC Stop
  31          **********************************************/
  32          void IIC_Stop()
  33          {
  34   1      OLED_SCLK_Set() ;
  35   1      //      OLED_SCLK_Clr();
  36   1              OLED_SDIN_Clr();
  37   1              OLED_SDIN_Set();
  38   1              
  39   1      }
  40          
  41          void IIC_Wait_Ack()
  42          {
  43   1      
  44   1              //GPIOB->CRH &= 0XFFF0FFFF;     //设置PB12为上拉输入模式
  45   1              //GPIOB->CRH |= 0x00080000;
  46   1      //      OLED_SDA = 1;
  47   1      //      delay_us(1);
  48   1              //OLED_SCL = 1;
  49   1              //delay_us(50000);
  50   1      /*      while(1)
  51   1              {
  52   1                      if(!OLED_SDA)                           //判断是否接收到OLED 应答信号
  53   1                      {
  54   1                              //GPIOB->CRH &= 0XFFF0FFFF;     //设置PB12为通用推免输出模式
C51 COMPILER V9.60.0.0   OLED                                                              11/13/2022 12:00:04 PAGE 2   

  55   1                              //GPIOB->CRH |= 0x00030000;
  56   1                              return;
  57   1                      }
  58   1              }
  59   1      */
  60   1              OLED_SCLK_Set();
  61   1              OLED_SCLK_Clr();
  62   1      }
  63          /**********************************************
  64          // IIC Write byte
  65          **********************************************/
  66          
  67          void Write_IIC_Byte(unsigned char IIC_Byte)
  68          {
  69   1              unsigned char i;
  70   1              unsigned char m,da;
  71   1              da=IIC_Byte;
  72   1              OLED_SCLK_Clr();
  73   1              for(i=0;i<8;i++)                
  74   1              {
  75   2                              m=da;
  76   2                      //      OLED_SCLK_Clr();
  77   2                      m=m&0x80;
  78   2                      if(m==0x80)
  79   2                      {OLED_SDIN_Set();}
  80   2                      else OLED_SDIN_Clr();
  81   2                              da=da<<1;
  82   2                      OLED_SCLK_Set();
  83   2                      OLED_SCLK_Clr();
  84   2                      }
  85   1      
  86   1      
  87   1      }
  88          /**********************************************
  89          // IIC Write Command
  90          **********************************************/
  91          void Write_IIC_Command(unsigned char IIC_Command)
  92          {
  93   1         IIC_Start();
  94   1         Write_IIC_Byte(0x78);            //Slave address,SA0=0
  95   1              IIC_Wait_Ack(); 
  96   1         Write_IIC_Byte(0x00);                        //write command
  97   1              IIC_Wait_Ack(); 
  98   1         Write_IIC_Byte(IIC_Command); 
  99   1              IIC_Wait_Ack(); 
 100   1         IIC_Stop();
 101   1      }
 102          /**********************************************
 103          // IIC Write Data
 104          **********************************************/
 105          void Write_IIC_Data(unsigned char IIC_Data)
 106          {
 107   1         IIC_Start();
 108   1         Write_IIC_Byte(0x78);                        //D/C#=0; R/W#=0
 109   1              IIC_Wait_Ack(); 
 110   1         Write_IIC_Byte(0x40);                        //write data
 111   1              IIC_Wait_Ack(); 
 112   1         Write_IIC_Byte(IIC_Data);
 113   1              IIC_Wait_Ack(); 
 114   1         IIC_Stop();
 115   1      }
 116          void OLED_WR_Byte(unsigned dat,unsigned cmd)
C51 COMPILER V9.60.0.0   OLED                                                              11/13/2022 12:00:04 PAGE 3   

 117          {
 118   1              if(cmd)
 119   1                              {
 120   2      
 121   2         Write_IIC_Data(dat);
 122   2         
 123   2                      }
 124   1              else {
 125   2         Write_IIC_Command(dat);
 126   2                      
 127   2              }
 128   1      
 129   1      
 130   1      }
 131          
 132          /********************************************
 133          // fill_Picture
 134          ********************************************/
 135          void fill_picture(unsigned char fill_Data)
 136          {
 137   1              unsigned char m,n;
 138   1              for(m=0;m<8;m++)
 139   1              {
 140   2                      OLED_WR_Byte(0xb0+m,0);         //page0-page1
 141   2                      OLED_WR_Byte(0x00,0);           //low column start address
 142   2                      OLED_WR_Byte(0x10,0);           //high column start address
 143   2                      for(n=0;n<128;n++)
 144   2                              {
 145   3                                      OLED_WR_Byte(fill_Data,1);
 146   3                              }
 147   2              }
 148   1      }
 149          
 150          
 151          /***********************Delay****************************************/
 152          void Delay_50ms(unsigned int Del_50ms)
 153          {
 154   1              unsigned int m;
 155   1              for(;Del_50ms>0;Del_50ms--)
 156   1                      for(m=6245;m>0;m--);
 157   1      }
 158          
 159          void Delay_1ms(unsigned int Del_1ms)
 160          {
 161   1              unsigned char j;
 162   1              while(Del_1ms--)
 163   1              {       
 164   2                      for(j=0;j<123;j++);
 165   2              }
 166   1      }
 167          
 168          //坐标设置
 169          
 170                  void OLED_Set_Pos(unsigned char x, unsigned char y) 
 171          {       OLED_WR_Byte(0xb0+y,OLED_CMD);
 172   1              OLED_WR_Byte(((x&0xf0)>>4)|0x10,OLED_CMD);
 173   1              OLED_WR_Byte((x&0x0f),OLED_CMD); 
 174   1      }         
 175          //开启OLED显示    
 176          void OLED_Display_On(void)
 177          {
 178   1              OLED_WR_Byte(0X8D,OLED_CMD);  //SET DCDC命令
C51 COMPILER V9.60.0.0   OLED                                                              11/13/2022 12:00:04 PAGE 4   

 179   1              OLED_WR_Byte(0X14,OLED_CMD);  //DCDC ON
 180   1              OLED_WR_Byte(0XAF,OLED_CMD);  //DISPLAY ON
 181   1      }
 182          //关闭OLED显示     
 183          void OLED_Display_Off(void)
 184          {
 185   1              OLED_WR_Byte(0X8D,OLED_CMD);  //SET DCDC命令
 186   1              OLED_WR_Byte(0X10,OLED_CMD);  //DCDC OFF
 187   1              OLED_WR_Byte(0XAE,OLED_CMD);  //DISPLAY OFF
 188   1      }                                        
 189          //清屏函数,清完屏,整个屏幕是黑色的!和没点亮一样!!!        
 190          void OLED_Clear(void)  
 191          {  
 192   1              u8 i,n;             
 193   1              for(i=0;i<8;i++)  
 194   1              {  
 195   2                      OLED_WR_Byte (0xb0+i,OLED_CMD);    //设置页地址（0~7）
 196   2                      OLED_WR_Byte (0x00,OLED_CMD);      //设置显示位置―列低地址
 197   2                      OLED_WR_Byte (0x10,OLED_CMD);      //设置显示位置―列高地址   
 198   2                      for(n=0;n<128;n++)OLED_WR_Byte(0,OLED_DATA); 
 199   2              } //更新显示
 200   1      }
 201          void OLED_On(void)  
 202          {  
 203   1              u8 i,n;             
 204   1              for(i=0;i<8;i++)  
 205   1              {  
 206   2                      OLED_WR_Byte (0xb0+i,OLED_CMD);    //设置页地址（0~7）
 207   2                      OLED_WR_Byte (0x00,OLED_CMD);      //设置显示位置―列低地址
 208   2                      OLED_WR_Byte (0x10,OLED_CMD);      //设置显示位置―列高地址   
 209   2                      for(n=0;n<128;n++)OLED_WR_Byte(1,OLED_DATA); 
 210   2              } //更新显示
 211   1      }
 212          //在指定位置显示一个字符,包括部分字符
 213          //x:0~127
 214          //y:0~63
 215          //mode:0,反白显示;1,正常显示                             
 216          //size:选择字体 16/12 
 217          void OLED_ShowChar(u8 x,u8 y,u8 chr,u8 Char_Size)
 218          {       
 219   1              unsigned char c=0,i=0;  
 220   1                      c=chr-' ';//得到偏移后的值                      
 221   1                      if(x>Max_Column-1){x=0;y=y+2;}
 222   1                      if(Char_Size ==16)
 223   1                              {
 224   2                              OLED_Set_Pos(x,y);      
 225   2                              for(i=0;i<8;i++)
 226   2                              OLED_WR_Byte(F8X16[c*16+i],OLED_DATA);
 227   2                              OLED_Set_Pos(x,y+1);
 228   2                              for(i=0;i<8;i++)
 229   2                              OLED_WR_Byte(F8X16[c*16+i+8],OLED_DATA);
 230   2                              }
 231   1                              else {  
 232   2                                      OLED_Set_Pos(x,y);
 233   2                                      for(i=0;i<6;i++)
 234   2                                      OLED_WR_Byte(F6x8[c][i],OLED_DATA);
 235   2                                      
 236   2                              }
 237   1      }
 238          //m^n函数
 239          u32 oled_pow(u8 m,u8 n)
 240          {
C51 COMPILER V9.60.0.0   OLED                                                              11/13/2022 12:00:04 PAGE 5   

 241   1              u32 result=1;    
 242   1              while(n--)result*=m;    
 243   1              return result;
 244   1      }                                 
 245          //显示2个数字
 246          //x,y :起点坐标  
 247          //len :数字的位数
 248          //size:字体大小
 249          //mode:模式     0,填充模式;1,叠加模式
 250          //num:数值(0~4294967295);                         
 251          void OLED_ShowNum(u8 x,u8 y,u32 num,u8 len,u8 size2)
 252          {               
 253   1              u8 t,temp;
 254   1              u8 enshow=0;                                               
 255   1              for(t=0;t<len;t++)
 256   1              {
 257   2                      temp=(num/oled_pow(10,len-t-1))%10;
 258   2                      if(enshow==0&&t<(len-1))
 259   2                      {
 260   3                              if(temp==0)
 261   3                              {
 262   4                                      OLED_ShowChar(x+(size2/2)*t,y,' ',size2);
 263   4                                      continue;
 264   4                              }else enshow=1; 
 265   3                               
 266   3                      }
 267   2                      OLED_ShowChar(x+(size2/2)*t,y,temp+'0',size2); 
 268   2              }
 269   1      } 
 270          //显示一个字符号串
 271          void OLED_ShowString(u8 x,u8 y,u8 *chr,u8 Char_Size)
 272          {
 273   1              unsigned char j=0;
 274   1              while (chr[j]!='\0')
 275   1              {               OLED_ShowChar(x,y,chr[j],Char_Size);
 276   2                              x+=8;
 277   2                      if(x>120){x=0;y+=2;}
 278   2                              j++;
 279   2              }
 280   1      }
 281          //显示汉字
 282          void OLED_ShowCHinese(u8 x,u8 y,u8 no)
 283          {                           
 284   1              u8 t,adder=0;
 285   1              OLED_Set_Pos(x,y);      
 286   1          for(t=0;t<16;t++)
 287   1                      {
 288   2                                      OLED_WR_Byte(Hzk[2*no][t],OLED_DATA);
 289   2                                      adder+=1;
 290   2           }  
 291   1                      OLED_Set_Pos(x,y+1);    
 292   1          for(t=0;t<16;t++)
 293   1                              {       
 294   2                                      OLED_WR_Byte(Hzk[2*no+1][t],OLED_DATA);
 295   2                                      adder+=1;
 296   2            }                                 
 297   1      }
 298          /***********功能描述：显示显示BMP图片128×64起始点坐标(x,y),x的范围0～127，y为页的范围0～7****************
             -*/
 299          void OLED_DrawBMP(unsigned char x0, unsigned char y0,unsigned char x1, unsigned char y1,unsigned char BMP[
             -])
 300          {       
C51 COMPILER V9.60.0.0   OLED                                                              11/13/2022 12:00:04 PAGE 6   

 301   1       unsigned int j=0;
 302   1       unsigned char x,y;
 303   1        
 304   1        if(y1%8==0) y=y1/8;      
 305   1        else y=y1/8+1;
 306   1              for(y=y0;y<y1;y++)
 307   1              {
 308   2                      OLED_Set_Pos(x0,y);
 309   2          for(x=x0;x<x1;x++)
 310   2                  {      
 311   3                      OLED_WR_Byte(BMP[j++],OLED_DATA);               
 312   3                  }
 313   2              }
 314   1      } 
 315          
 316          //初始化SSD1306                                     
 317          void OLED_Init(void)
 318          {       
 319   1       
 320   1      OLED_WR_Byte(0xAE,OLED_CMD);//--display off
 321   1              OLED_WR_Byte(0x00,OLED_CMD);//---set low column address
 322   1              OLED_WR_Byte(0x10,OLED_CMD);//---set high column address
 323   1              OLED_WR_Byte(0x40,OLED_CMD);//--set start line address  
 324   1              OLED_WR_Byte(0xB0,OLED_CMD);//--set page address
 325   1              OLED_WR_Byte(0x81,OLED_CMD); // contract control
 326   1              OLED_WR_Byte(0xFF,OLED_CMD);//--128   
 327   1              OLED_WR_Byte(0xA1,OLED_CMD);//set segment remap 
 328   1              OLED_WR_Byte(0xA6,OLED_CMD);//--normal / reverse
 329   1              OLED_WR_Byte(0xA8,OLED_CMD);//--set multiplex ratio(1 to 64)
 330   1              OLED_WR_Byte(0x3F,OLED_CMD);//--1/32 duty
 331   1              OLED_WR_Byte(0xC8,OLED_CMD);//Com scan direction
 332   1              OLED_WR_Byte(0xD3,OLED_CMD);//-set display offset
 333   1              OLED_WR_Byte(0x00,OLED_CMD);//
 334   1              
 335   1              OLED_WR_Byte(0xD5,OLED_CMD);//set osc division
 336   1              OLED_WR_Byte(0x80,OLED_CMD);//
 337   1              
 338   1              OLED_WR_Byte(0xD8,OLED_CMD);//set area color mode off
 339   1              OLED_WR_Byte(0x05,OLED_CMD);//
 340   1              
 341   1              OLED_WR_Byte(0xD9,OLED_CMD);//Set Pre-Charge Period
 342   1              OLED_WR_Byte(0xF1,OLED_CMD);//
 343   1              
 344   1              OLED_WR_Byte(0xDA,OLED_CMD);//set com pin configuartion
 345   1              OLED_WR_Byte(0x12,OLED_CMD);//
 346   1              
 347   1              OLED_WR_Byte(0xDB,OLED_CMD);//set Vcomh
 348   1              OLED_WR_Byte(0x30,OLED_CMD);//
 349   1              
 350   1              OLED_WR_Byte(0x8D,OLED_CMD);//set charge pump enable
 351   1              OLED_WR_Byte(0x14,OLED_CMD);//
 352   1              
 353   1              OLED_WR_Byte(0xAF,OLED_CMD);//--turn on oled panel
 354   1      }  
 355          
 356          
 357          
 358          
 359          
 360          
 361          
 362          
C51 COMPILER V9.60.0.0   OLED                                                              11/13/2022 12:00:04 PAGE 7   

 363          
 364          
 365          
 366          
 367          
 368          
 369          
 370          
 371          
 372          
 373          
 374          
 375          
 376          
 377          
 378          
 379          
 380          
 381          
 382          
 383          


MODULE INFORMATION:   STATIC OVERLAYABLE
   CODE SIZE        =   1367    ----
   CONSTANT SIZE    =   2520    ----
   XDATA SIZE       =   ----    ----
   PDATA SIZE       =   ----    ----
   DATA SIZE        =   ----      41
   IDATA SIZE       =   ----    ----
   BIT SIZE         =   ----    ----
END OF MODULE INFORMATION.


C51 COMPILATION COMPLETE.  0 WARNING(S),  0 ERROR(S)
